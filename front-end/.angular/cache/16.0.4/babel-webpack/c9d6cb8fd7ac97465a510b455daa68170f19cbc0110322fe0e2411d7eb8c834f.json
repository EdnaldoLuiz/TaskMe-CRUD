{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UsersService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://taskme-crud-production.up.railway.app/users';\n  }\n  getUsers() {\n    return this.http.get(this.baseUrl);\n  }\n  createUser(newUser) {\n    return this.http.post(this.baseUrl, newUser);\n  }\n  updateUser(id, user) {\n    const url = `${this.baseUrl}/${encodeURIComponent(id)}`;\n    return this.http.put(url, user);\n  }\n  deleteUser(id) {\n    const url = `${this.baseUrl}/${encodeURIComponent(id)}`;\n    return this.http.delete(url);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});\nexport { UsersService };","map":{"version":3,"names":["UsersService","constructor","http","baseUrl","getUsers","get","createUser","newUser","post","updateUser","id","user","url","encodeURIComponent","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/ednaldoluiz/Desktop/GithuRepositorio/TaskMeCRUD/TaskMeCRUD/TaskMe_Back-End/front-end/src/app/service/users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private baseUrl = 'https://taskme-crud-production.up.railway.app/users';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(this.baseUrl);\n  }\n\n  createUser(newUser: any): Observable<any> {\n    return this.http.post<any>(this.baseUrl, newUser);\n  }\n\n  updateUser(id: string, user: any): Observable<any> {\n    const url = `${this.baseUrl}/${encodeURIComponent(id)}`;\n    return this.http.put<any>(url, user);\n  }\n\n  deleteUser(id: string): Observable<any> {\n    const url = `${this.baseUrl}/${encodeURIComponent(id)}`;\n    return this.http.delete<any>(url);\n  }\n}\n"],"mappings":";;AAIA,MAGaA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,qDAAqD;EAEhC;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,OAAO,CAAC;EAC3C;EAEAG,UAAUA,CAACC,OAAY;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,OAAO,EAAEI,OAAO,CAAC;EACnD;EAEAE,UAAUA,CAACC,EAAU,EAAEC,IAAS;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACT,OAAO,IAAIU,kBAAkB,CAACH,EAAE,CAAC,EAAE;IACvD,OAAO,IAAI,CAACR,IAAI,CAACY,GAAG,CAAMF,GAAG,EAAED,IAAI,CAAC;EACtC;EAEAI,UAAUA,CAACL,EAAU;IACnB,MAAME,GAAG,GAAG,GAAG,IAAI,CAACT,OAAO,IAAIU,kBAAkB,CAACH,EAAE,CAAC,EAAE;IACvD,OAAO,IAAI,CAACR,IAAI,CAACc,MAAM,CAAMJ,GAAG,CAAC;EACnC;;AArBWZ,YAAY,C;mBAAZA,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZpB,YAAY,C;SAAZA,YAAY;EAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPvB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}